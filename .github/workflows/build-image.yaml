name: Build Image

on:
  release:
    types: [ created ]
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        required: true
        type: string
env:
  FILE_NAME: consul-kv-sync_${{ env.RELEASE_VERSION }}_${{ matrix.target }}.tar.gz
  RELEASE_VERSION: ${{ github.ref }}
  RELEASE_INPUT: ${{ inputs.RELEASE_VERSION }}
  REGISTRY_DOMAIN: ${{ vars.REGISTRY_DOMAIN }}
  WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id}}
  WORKFLOW_REF: build ${{ github.run_id }} on ${{ github.ref_name }}
jobs:
  build:
    name: build image ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [ x86_64-unknown-linux-musl ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          path: downloads
          pattern: ${{ env.FILE_NAME }}
      - name: check download dir contents
        run: find downloads
      - name: unzip artifact
        run: |
          cd downloads
          tar zxvf downloads/$FILE_NAME
      - name: Install depot
        run: |
          curl -L https://depot.dev/install-cli.sh | sudo env DEPOT_INSTALL_DIR=/usr/local/bin sh
      - name: Login to OCIR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_DOMAIN }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and tag image
        env:
          IMAGE_VERSION: ${{ env.RELEASE_VERSION }}
          DEPOT_TOKEN: ${{ secrets.DEPOT_TOKEN }}
          DEPOT_PROJECT_ID: ${{ vars.DEPOT_PROJECT_ID }}
        run: |
          export TAG_VERSION=${RELEASE_INPUT:-"${RELEASE_VERSION}"}
          /usr/local/bin/depot build --push --platform linux/amd64 -t ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_VERSION} --build-arg RELEASE_VERSION=${TAG_VERSION} .
      - name: Notify image build success
        if: success()
        uses: giovannicandido/notification-action@main
        with:
          api-key: ${{ secrets.ZULIP_API_KEY }}
          topic: "deployments/${{ github.repository }}"
          workflow-url: ${{ env.WORKFLOW_URL }}
          workflow-ref: ${{env.WORKFLOW_REF }}
          tag: ${{ env.RELEASE_VERSION }}
          content-type: image-success
      - name: Notify deployment failure
        if: failure()
        uses: giovannicandido/notification-action@main
        with:
          api-key: ${{ secrets.ZULIP_API_KEY }}
          topic: "deployments/${{ github.repository }}"
          workflow-url: ${{ env.WORKFLOW_URL }}
          workflow-ref: ${{env.WORKFLOW_REF }}
          tag: ${{ env.RELEASE_VERSION }}
          content-type: deploy-failure